// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"github.com/gsmservice-pl/messaging-sdk-go/internal/utils"
	"github.com/gsmservice-pl/messaging-sdk-go/models/components"
)

type SendSmsRequestBodyType string

const (
	SendSmsRequestBodyTypeSms        SendSmsRequestBodyType = "Sms"
	SendSmsRequestBodyTypeArrayOfSms SendSmsRequestBodyType = "arrayOfSms"
)

// SendSmsRequestBody - To send a single SMS or messages with the same content to multiple recipients, pass in the Request Body a single `Sms` object with the properties of this message. To send multiple messages with different content at the same time, pass in the Request Body an `array` of `Sms` objects with the properties of each message.
type SendSmsRequestBody struct {
	Sms        *components.Sms
	ArrayOfSms []components.Sms

	Type SendSmsRequestBodyType
}

func CreateSendSmsRequestBodySms(sms components.Sms) SendSmsRequestBody {
	typ := SendSmsRequestBodyTypeSms

	return SendSmsRequestBody{
		Sms:  &sms,
		Type: typ,
	}
}

func CreateSendSmsRequestBodyArrayOfSms(arrayOfSms []components.Sms) SendSmsRequestBody {
	typ := SendSmsRequestBodyTypeArrayOfSms

	return SendSmsRequestBody{
		ArrayOfSms: arrayOfSms,
		Type:       typ,
	}
}

func (u *SendSmsRequestBody) UnmarshalJSON(data []byte) error {

	var sms components.Sms = components.Sms{}
	if err := utils.UnmarshalJSON(data, &sms, "", true, true); err == nil {
		u.Sms = &sms
		u.Type = SendSmsRequestBodyTypeSms
		return nil
	}

	var arrayOfSms []components.Sms = []components.Sms{}
	if err := utils.UnmarshalJSON(data, &arrayOfSms, "", true, true); err == nil {
		u.ArrayOfSms = arrayOfSms
		u.Type = SendSmsRequestBodyTypeArrayOfSms
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for SendSmsRequestBody", string(data))
}

func (u SendSmsRequestBody) MarshalJSON() ([]byte, error) {
	if u.Sms != nil {
		return utils.MarshalJSON(u.Sms, "", true)
	}

	if u.ArrayOfSms != nil {
		return utils.MarshalJSON(u.ArrayOfSms, "", true)
	}

	return nil, errors.New("could not marshal union type SendSmsRequestBody: all fields are null")
}

type SendSmsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request was processed successfully. Please check statuses of particular messages in response body.
	Messages []components.Message
	Headers  map[string][]string
}

func (o *SendSmsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SendSmsResponse) GetMessages() []components.Message {
	if o == nil {
		return nil
	}
	return o.Messages
}

func (o *SendSmsResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
