// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gsmservice-pl/messaging-sdk-go/v3/internal/utils"
	"github.com/gsmservice-pl/messaging-sdk-go/v3/models/components"
)

type ListMessagesRequest struct {
	// Page number of results
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Number of results on one page
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
}

func (l ListMessagesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListMessagesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (l *ListMessagesRequest) GetPage() *int64 {
	if l == nil {
		return nil
	}
	return l.Page
}

func (l *ListMessagesRequest) GetLimit() *int64 {
	if l == nil {
		return nil
	}
	return l.Limit
}

type ListMessagesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request was processed successfully. Please check messages details in each `Message` object.
	Messages []components.Message
	Headers  map[string][]string
}

func (l *ListMessagesResponse) GetHTTPMeta() components.HTTPMetadata {
	if l == nil {
		return components.HTTPMetadata{}
	}
	return l.HTTPMeta
}

func (l *ListMessagesResponse) GetMessages() []components.Message {
	if l == nil {
		return nil
	}
	return l.Messages
}

func (l *ListMessagesResponse) GetHeaders() map[string][]string {
	if l == nil {
		return map[string][]string{}
	}
	return l.Headers
}
