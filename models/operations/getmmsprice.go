// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"github.com/gsmservice-pl/messaging-sdk-go/v3/internal/utils"
	"github.com/gsmservice-pl/messaging-sdk-go/v3/models/components"
)

type GetMmsPriceRequestBodyType string

const (
	GetMmsPriceRequestBodyTypeMmsMessage        GetMmsPriceRequestBodyType = "MmsMessage"
	GetMmsPriceRequestBodyTypeArrayOfMmsMessage GetMmsPriceRequestBodyType = "arrayOfMmsMessage"
)

// GetMmsPriceRequestBody - To check the price of a single message or messages with the same content to multiple recipients, pass a single `MmsMessage` object with the properties of this message using `operations.CreateGetMmsPriceRequestBodyMmsMessage()` method. To check the price of multiple messages with different content at the same time, pass a `[]MmsMessage` array with the properties of each message using `operations.CreateGetMmsPriceRequestBodyArrayOfMmsMessage()` method.
type GetMmsPriceRequestBody struct {
	MmsMessage        *components.MmsMessage  `queryParam:"inline,name=requestBody"`
	ArrayOfMmsMessage []components.MmsMessage `queryParam:"inline,name=requestBody"`

	Type GetMmsPriceRequestBodyType
}

func CreateGetMmsPriceRequestBodyMmsMessage(mmsMessage components.MmsMessage) GetMmsPriceRequestBody {
	typ := GetMmsPriceRequestBodyTypeMmsMessage

	return GetMmsPriceRequestBody{
		MmsMessage: &mmsMessage,
		Type:       typ,
	}
}

func CreateGetMmsPriceRequestBodyArrayOfMmsMessage(arrayOfMmsMessage []components.MmsMessage) GetMmsPriceRequestBody {
	typ := GetMmsPriceRequestBodyTypeArrayOfMmsMessage

	return GetMmsPriceRequestBody{
		ArrayOfMmsMessage: arrayOfMmsMessage,
		Type:              typ,
	}
}

func (u *GetMmsPriceRequestBody) UnmarshalJSON(data []byte) error {

	var mmsMessage components.MmsMessage = components.MmsMessage{}
	if err := utils.UnmarshalJSON(data, &mmsMessage, "", true, nil); err == nil {
		u.MmsMessage = &mmsMessage
		u.Type = GetMmsPriceRequestBodyTypeMmsMessage
		return nil
	}

	var arrayOfMmsMessage []components.MmsMessage = []components.MmsMessage{}
	if err := utils.UnmarshalJSON(data, &arrayOfMmsMessage, "", true, nil); err == nil {
		u.ArrayOfMmsMessage = arrayOfMmsMessage
		u.Type = GetMmsPriceRequestBodyTypeArrayOfMmsMessage
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetMmsPriceRequestBody", string(data))
}

func (u GetMmsPriceRequestBody) MarshalJSON() ([]byte, error) {
	if u.MmsMessage != nil {
		return utils.MarshalJSON(u.MmsMessage, "", true)
	}

	if u.ArrayOfMmsMessage != nil {
		return utils.MarshalJSON(u.ArrayOfMmsMessage, "", true)
	}

	return nil, errors.New("could not marshal union type GetMmsPriceRequestBody: all fields are null")
}

type GetMmsPriceResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request was processed successfully. Please check the price and the details of particular messages in each `Price` object
	Prices  []components.Price
	Headers map[string][]string
}

func (g *GetMmsPriceResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GetMmsPriceResponse) GetPrices() []components.Price {
	if g == nil {
		return nil
	}
	return g.Prices
}

func (g *GetMmsPriceResponse) GetHeaders() map[string][]string {
	if g == nil {
		return map[string][]string{}
	}
	return g.Headers
}
