// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gsmservice-pl/messaging-sdk-go/v3/internal/utils"
	"time"
)

// Message - An object defining the properties of a single message
type Message struct {
	// Unique message identifier
	ID *int64 `json:"id,omitempty"`
	// Custom message ID assigned by the User
	Cid *string `json:"cid,omitempty"`
	// Message type (components.MessageTypeSmsPro -> SMS PRO, components.MessageTypeSmsEco -> SMS ECO, components.MessageTypeSmsTwoWay ->SMS 2WAY, components.MessageTypeMms -> MMS)
	Type *MessageType `json:"type,omitempty"`
	// A telephone number in international format (with a plus sign and the country code at the beginning, e.g. +48 for Poland)
	Recipient *string `json:"recipient,omitempty"`
	// Message sender name
	Sender *string `json:"sender,omitempty"`
	// The count of parts that message consists of
	Parts *int64 `json:"parts,omitempty"`
	// Sending date and time (in ISO 8601 format)
	SentDate *time.Time `json:"sent_date,omitempty"`
	// Date and time of last status change (in ISO 8601 format)
	StatusDate *time.Time `json:"status_date,omitempty"`
	// Message status code
	StatusCode *string `json:"status_code,omitempty"`
	// Human redable description of message status
	StatusDescription *string `json:"status_description,omitempty"`
	// Did the message contain special characters, e.g. Polish diacritics?
	Unicode *bool `json:"unicode,omitempty"`
	// Was the message sent with class 0 (FLASH)?
	Flash *bool `json:"flash,omitempty"`
	// The price of message (in PLN)
	Price *float32 `json:"price,omitempty"`
}

func (m Message) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *Message) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (m *Message) GetID() *int64 {
	if m == nil {
		return nil
	}
	return m.ID
}

func (m *Message) GetCid() *string {
	if m == nil {
		return nil
	}
	return m.Cid
}

func (m *Message) GetType() *MessageType {
	if m == nil {
		return nil
	}
	return m.Type
}

func (m *Message) GetRecipient() *string {
	if m == nil {
		return nil
	}
	return m.Recipient
}

func (m *Message) GetSender() *string {
	if m == nil {
		return nil
	}
	return m.Sender
}

func (m *Message) GetParts() *int64 {
	if m == nil {
		return nil
	}
	return m.Parts
}

func (m *Message) GetSentDate() *time.Time {
	if m == nil {
		return nil
	}
	return m.SentDate
}

func (m *Message) GetStatusDate() *time.Time {
	if m == nil {
		return nil
	}
	return m.StatusDate
}

func (m *Message) GetStatusCode() *string {
	if m == nil {
		return nil
	}
	return m.StatusCode
}

func (m *Message) GetStatusDescription() *string {
	if m == nil {
		return nil
	}
	return m.StatusDescription
}

func (m *Message) GetUnicode() *bool {
	if m == nil {
		return nil
	}
	return m.Unicode
}

func (m *Message) GetFlash() *bool {
	if m == nil {
		return nil
	}
	return m.Flash
}

func (m *Message) GetPrice() *float32 {
	if m == nil {
		return nil
	}
	return m.Price
}
