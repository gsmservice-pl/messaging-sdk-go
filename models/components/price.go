// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// Price - An object with the properties and price of a single message
type Price struct {
	// Information about a possible error
	Error *string `json:"error,omitempty"`
	// Custom message ID assigned by the User
	Cid *string `json:"cid,omitempty"`
	// Message type (components.MessageTypeSmsPro -> SMS PRO, components.MessageTypeSmsEco -> SMS ECO, components.MessageTypeSmsTwoWay ->SMS 2WAY, components.MessageTypeMms -> MMS)
	Type *MessageType `json:"type,omitempty"`
	// A telephone number in international format (with a plus sign and the country code at the beginning, e.g. +48 for Poland)
	Recipient *string `json:"recipient,omitempty"`
	// Message sender name
	Sender *string `json:"sender,omitempty"`
	// The count of parts that message consists of
	Parts *int64 `json:"parts,omitempty"`
	// Did the message contain special characters, e.g. Polish diacritics?
	Unicode *bool `json:"unicode,omitempty"`
	// Was the message sent with class 0 (FLASH)?
	Flash *bool `json:"flash,omitempty"`
	// The price of message (in PLN)
	Price *float32 `json:"price,omitempty"`
}

func (p *Price) GetError() *string {
	if p == nil {
		return nil
	}
	return p.Error
}

func (p *Price) GetCid() *string {
	if p == nil {
		return nil
	}
	return p.Cid
}

func (p *Price) GetType() *MessageType {
	if p == nil {
		return nil
	}
	return p.Type
}

func (p *Price) GetRecipient() *string {
	if p == nil {
		return nil
	}
	return p.Recipient
}

func (p *Price) GetSender() *string {
	if p == nil {
		return nil
	}
	return p.Sender
}

func (p *Price) GetParts() *int64 {
	if p == nil {
		return nil
	}
	return p.Parts
}

func (p *Price) GetUnicode() *bool {
	if p == nil {
		return nil
	}
	return p.Unicode
}

func (p *Price) GetFlash() *bool {
	if p == nil {
		return nil
	}
	return p.Flash
}

func (p *Price) GetPrice() *float32 {
	if p == nil {
		return nil
	}
	return p.Price
}
